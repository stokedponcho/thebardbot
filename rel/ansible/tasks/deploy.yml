---
- hosts: webservers
  become: yes
  become_method: su
  vars_files:
    - "../vars/main.yml"
  tasks:
    - name: "Check if {{ deploy_dir }}/{{ app_tarball }} exists"
      stat:
        path: "{{ deploy_dir }}/{{ app_tarball }}"
      register: new_tarball

    - name: "Copy tarball {{ app_tarball }} to webserver"
      copy:
        src: "{{ app_local_path }}"
        dest: "{{ deploy_dir }}/{{ app_tarball }}"
      when: not new_tarball.stat.exists

    - name: "Check if {{ deploy_dir }}/{{ app_archive }} exists"
      stat:
        path: "{{ deploy_dir }}//{{ app_archive }}"
      register: new_archive

    - name: "Decompress {{ deploy_dir }}/{{ app_tarball }}"
      raw: gzip -d -k {{ deploy_dir }}/{{ app_tarball }}
      when: not new_archive.stat.exists

    - name: "Set files ownership to {{ deploy_user }}:{{ deploy_user }}"
      file:
        path: "{{ deploy_dir }}"
        recurse: yes
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"

    - name: "Copy service script"
      template:
        src: "../templates/service.j2"
        dest: "{{ systemd_script }}"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: 0700

    - name: Restart service
      service:
        name: "{{ app_name }}"
        state: restarted
